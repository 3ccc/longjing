!function (n, t) {
    "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define("longjing", [], t) : "object" == typeof exports ? exports.longjing = t() : n.longjing = t()
}(window, function () {
    return function (n) {
        var t = {};

        function e(o) {
            if (t[o])return t[o].exports;
            var r = t[o] = {i: o, l: !1, exports: {}};
            return n[o].call(r.exports, r, r.exports, e), r.l = !0, r.exports
        }

        return e.m = n, e.c = t, e.d = function (n, t, o) {
            e.o(n, t) || Object.defineProperty(n, t, {configurable: !1, enumerable: !0, get: o})
        }, e.r = function (n) {
            Object.defineProperty(n, "__esModule", {value: !0})
        }, e.n = function (n) {
            var t = n && n.__esModule ? function () {
                return n.default
            } : function () {
                return n
            };
            return e.d(t, "a", t), t
        }, e.o = function (n, t) {
            return Object.prototype.hasOwnProperty.call(n, t)
        }, e.p = "", e(e.s = 1)
    }([function (n, t) {
        var e, o, r;
        window.ljTsEventAction = {}, window.onTsEvent = function () {
            var n;
            switch (arguments.length) {
                case 1:
                    n = JSON.parse(arguments[0]), "function" == typeof ljTsEventAction[n.fn] && ljTsEventAction[n.fn](n.data);
                    break;
                case 2:
                    "function" == typeof ljTsEventAction[arguments[0]] && ljTsEventAction[arguments[0]](arguments[1])
            }
        }, n.exports = (e = function (n, t) {
            return t ? JSON.stringify({fn: n, data: t}) : JSON.stringify({fn: n})
        }, o = function () {
            var n = arguments[0], t = "object" == typeof arguments[1] ? arguments[1] : null, o = null;
            if ("object" == typeof arguments[1] ? !0 === arguments[2] : !0 === arguments[1])try {
                return void 0 !== (o = JSON.parse(window.tianshan.invokeApp(e(n, t)))).code && 0 == o.code ? o.data || {} : o
            } catch (r) {
                return console.log(e(n, t), window.tianshan.invokeApp(e(n, t)), "tianshan return data is not json format", r), o
            } else try {
                window.tianshan.invokeApp(e(n, t))
            } catch (o) {
                console.log("app run function has error", e(n, t), o)
            }
        }, r = {
            test: function () {
                return "driver is ok"
            }, getAppID: function () {
                return o("getAppId", !0)
            }, getPageType: function () {
                return o("getPageType", !0)
            }, restart: function () {
                o("restart")
            }, upgrade: function (n) {
                o("upgrade", n)
            }, open: function (n) {
                o("open", n)
            }, quit: function (n) {
                o("quit", n)
            }, readFile: function (n) {
                return o("readFile", n, !0)
            }, readConfig: function () {
                return o("readConfig", !0)
            }, writeConfig: function (n) {
                o("writeConfig", n)
            }, setQuitTime: function (n) {
                o("setQuitTime", n)
            }, notifyMainPage: function () {
                o("notifyMainPage")
            }, ttsSpeak: function (n) {
                o("ttsSpeak", n)
            }
        }, function (n, t) {
            return r[n] ? "function" == typeof r[n] ? r[n](t) : r[n] : t ? (t.callback && t.callback(t), t.callbackFn && t.callbackFn(t), void(t.fn && t.fn(t))) : null
        })
    }, function (n, t, e) {
        var o = e(0), r = {
            getDeviceNumber: function () {
                return this.get().clientNumber || null
            }, getSellerId: function () {
                return this.get().sellerId || null
            }, getPointNo: function () {
                return this.get().pointNo || null
            }, get: function () {
                var n = o("readFile", {path: "sys/client.json"}) || {}, t = {};
                try {
                    t = JSON.parse(n.content)
                } catch (e) {
                    t = n.content || {}
                }
                return t
            }
        }, i = o("getAppID"), c = {
            test: function () {
                return "hello world"
            }, config: function () {
                var n = function () {
                    var n = t(), e = arguments[0];
                    if ("object" == typeof e)for (var r in e)n[r] = e[r]; else n[e] = arguments[1];
                    o("writeConfig", {content: JSON.stringify(n)})
                }, t = function (n) {
                    var t = o("readConfig") || {}, e = {};
                    try {
                        e = "string" == typeof t.content ? function (n) {
                            return "object" == typeof n ? n : arguments.callee(JSON.parse(n))
                        }(JSON.parse(t.content) || {}) : t.content || {}
                    } catch (n) {
                        e = t.content || {}, console.log("读取配置时，数据处理异常")
                    }
                    if (n)switch (n) {
                        case"deviceNumber":
                            return r.getDeviceNumber();
                        case"sellerId":
                            return r.getSellerId();
                        case"pointNo":
                            return r.getPointNo();
                        case"appid":
                        case"appId":
                        case"appID":
                            return "object" == typeof i ? i.appId : i;
                        default:
                            return e[n] || null
                    }
                    return e
                };
                switch (arguments.length) {
                    case 2:
                        n(arguments[0], arguments[1]);
                        break;
                    case 1:
                        if ("object" == typeof arguments[0] && n(arguments[0]), "string" == typeof arguments[0])return t(arguments[0]);
                        break;
                    case 0:
                        return t()
                }
            }, openChildWindow: function (n) {
                o("open", {type: n.type || "offline", url: n.path})
            }, closeChildWindow: function (n) {
                n ? o("quit", {url: n}) : o("quit")
            }, refresh: function (n) {
                o("refresh", {path: n})
            }, upgrade: function (n) {
                o("upgrade", {url: n.url}), this.ts("upgradeResult", function () {
                    o("restart")
                })
            }, setChildWindowAutoCloseSecond: function (n) {
                o("setQuitTime", {time: n.time || n})
            }, refreshMainWindow: function () {
                o("notifyMainPage")
            }, getPageType: function () {
                return o("getPageType")
            }, voice: function (n) {
                o("ttsSpeak", n)
            }, notify: function (n, t, e) {
                switch (n) {
                    case"ENTER_SCREENSAVERS":
                        n = "inScreensaver";
                        break;
                    case"APP_CMD":
                        n = "NOTIFY_APP";
                        break;
                    case"TTS_SPEAK":
                        n = "TTS_SPEAK"
                }
                ljTsEventAction[n] = function (n) {
                    t && t(n, e)
                }
            }, ready: function (n) {
                n()
            }
        };
        n.exports = c
    }])
});